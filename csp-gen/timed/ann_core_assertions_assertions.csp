
--
-- RoboChart generator version 3.0.0.qualifier
-- Automatically generated on 01-06-2024 13:58:21
--
-- Iterated compression status: true
-- Assertions compression status: false
--

include "defs/file_test39_defs.csp"
include "defs/file_test77_defs.csp"
include "defs/file_test62_defs.csp"
include "defs/file_test32_defs.csp"
include "defs/file_test133_defs.csp"
include "defs/file_test148_defs.csp"
include "defs/file_test103_defs.csp"
include "defs/file_test141_defs.csp"
include "defs/file_test47_defs.csp"
include "defs/file_RotationPID_defs.csp"
include "defs/file_test125_defs.csp"
include "defs/file_test92_defs.csp"
include "defs/core_timed_defs.csp"
include "defs/file_test155_defs.csp"
include "defs/file_test10_defs.csp"
include "defs/file_test55_defs.csp"
include "defs/file_test110_defs.csp"
include "defs/set_toolkit_defs.csp"
include "defs/file_test84_defs.csp"
include "defs/file_test5_defs.csp"
include "defs/relation_toolkit_defs.csp"
include "defs/file_test17_defs.csp"
include "defs/file_test117_defs.csp"
include "defs/file_test31_defs.csp"
include "defs/file_test63_defs.csp"
include "defs/file_test78_defs.csp"
include "defs/file_test33_defs.csp"
include "defs/file_test126_defs.csp"
include "defs/file_test46_defs.csp"
include "defs/file_test6_defs.csp"
include "defs/file_test91_defs.csp"
include "defs/file_test40_defs.csp"
include "defs/file_test53_defs.csp"
include "defs/file_test139_defs.csp"
include "defs/file_test85_defs.csp"
include "defs/file_test18_defs.csp"
include "defs/file_test56_defs.csp"
include "defs/file_test132_defs.csp"
include "defs/file_test11_defs.csp"
include "defs/file_test69_defs.csp"
include "defs/file_test24_defs.csp"
include "defs/file_test26_defs.csp"
include "defs/file_test101_defs.csp"
include "defs/file_test116_defs.csp"
include "defs/file_test30_defs.csp"
include "defs/sequence_toolkit_defs.csp"
include "defs/file_test98_defs.csp"
include "defs/file_test94_defs.csp"
include "defs/file_test34_defs.csp"
include "defs/file_test154_defs.csp"
include "defs/file_test41_defs.csp"
include "defs/file_test127_defs.csp"
include "defs/file_test49_defs.csp"
include "defs/file_test157_defs.csp"
include "defs/file_test119_defs.csp"
include "defs/file_test142_defs.csp"
include "defs/file_test87_defs.csp"
include "defs/file_test23_defs.csp"
include "defs/file_test104_defs.csp"
include "defs/file_test97_defs.csp"
include "defs/file_test0_defs.csp"
include "defs/file_test57_defs.csp"
include "defs/file_test71_defs.csp"
include "defs/file_test131_defs.csp"
include "defs/file_AnglePID_defs.csp"
include "defs/file_test147_defs.csp"
include "defs/file_test109_defs.csp"
include "defs/file_test61_defs.csp"
include "defs/file_test8_defs.csp"
include "defs/file_test74_defs.csp"
include "defs/file_test19_defs.csp"
include "defs/file_test121_defs.csp"
include "defs/file_test134_defs.csp"
include "defs/file_test111_defs.csp"
include "defs/file_test54_defs.csp"
include "defs/file_test16_defs.csp"
include "defs/robochart_defs.csp"
include "defs/file_test67_defs.csp"
include "defs/file_test29_defs.csp"
include "defs/file_test137_defs.csp"
include "defs/file_test64_defs.csp"
include "defs/file_test51_defs.csp"
include "defs/file_test124_defs.csp"
include "defs/file_test58_defs.csp"
include "defs/file_test152_defs.csp"
include "defs/file_test81_defs.csp"
include "defs/file_test129_defs.csp"
include "defs/file_test13_defs.csp"
include "defs/file_test9_defs.csp"
include "defs/file_test28_defs.csp"
include "defs/file_test159_defs.csp"
include "defs/file_test160_defs.csp"
include "defs/file_test122_defs.csp"
include "defs/file_test114_defs.csp"
include "defs/file_test66_defs.csp"
include "defs/file_test21_defs.csp"
include "defs/file_test2_defs.csp"
include "defs/file_test106_defs.csp"
include "defs/file_test73_defs.csp"
include "defs/file_test36_defs.csp"
include "defs/file_test20_defs.csp"
include "defs/file_test136_defs.csp"
include "defs/file_test44_defs.csp"
include "defs/file_test89_defs.csp"
include "defs/file_test144_defs.csp"
include "defs/file_SegwayANN_defs.csp"
include "defs/file_test95_defs.csp"
include "defs/file_test50_defs.csp"
include "defs/file_test3_defs.csp"
include "defs/file_test100_defs.csp"
include "defs/file_test65_defs.csp"
include "defs/file_test82_defs.csp"
include "defs/file_test113_defs.csp"
include "defs/file_test27_defs.csp"
include "defs/file_test107_defs.csp"
include "defs/file_test59_defs.csp"
include "defs/file_test14_defs.csp"
include "defs/file_test161_defs.csp"
include "defs/file_BalanceSTM_defs.csp"
include "defs/file_test158_defs.csp"
include "defs/file_test72_defs.csp"
include "defs/file_test88_defs.csp"
include "defs/file_test37_defs.csp"
include "defs/file_test145_defs.csp"
include "defs/file_test43_defs.csp"
include "defs/SegwayANN.csp"
include "defs/file_test151_defs.csp"
include "defs/state_timed_defs.csp"
include "defs/file_test135_defs.csp"
include "defs/file_test75_defs.csp"
include "defs/file_test45_defs.csp"
include "defs/file_test120_defs.csp"
include "defs/file_test108_defs.csp"
include "defs/file_test15_defs.csp"
include "defs/file_test60_defs.csp"
include "defs/file_test146_defs.csp"
include "defs/file_test7_defs.csp"
include "defs/file_test79_defs.csp"
include "defs/file_test86_defs.csp"
include "defs/file_test138_defs.csp"
include "defs/file_test68_defs.csp"
include "defs/file_test123_defs.csp"
include "defs/file_test150_defs.csp"
include "defs/file_test52_defs.csp"
include "defs/file_test149_defs.csp"
include "defs/file_test112_defs.csp"
include "defs/file_test90_defs.csp"
include "defs/file_SegwayRP_defs.csp"
include "defs/file_test76_defs.csp"
include "defs/file_test102_defs.csp"
include "defs/file_test1_defs.csp"
include "defs/file_test153_defs.csp"
include "defs/file_test12_defs.csp"
include "defs/file_test115_defs.csp"
include "defs/core_defs.csp"
include "defs/file_test25_defs.csp"
include "defs/file_test140_defs.csp"
include "defs/file_test128_defs.csp"
include "defs/file_test38_defs.csp"
include "defs/file_test93_defs.csp"
include "defs/file_SpeedPID_defs.csp"
include "defs/file_test42_defs.csp"
include "defs/file_test80_defs.csp"
include "defs/file_test99_defs.csp"
include "defs/file_test143_defs.csp"
include "defs/file_test35_defs.csp"
include "defs/file_test22_defs.csp"
include "defs/function_toolkit_defs.csp"
include "defs/file_test156_defs.csp"
include "defs/file_test105_defs.csp"
include "defs/file_test130_defs.csp"
include "defs/file_test48_defs.csp"
include "defs/file_test118_defs.csp"
include "defs/file_test4_defs.csp"
include "defs/file_test70_defs.csp"
include "instantiations.csp"
include "defs/file_test83_defs.csp"
include "defs/file_test96_defs.csp"

channel r__

-- M1 - timed deadlock free
assert prioritise(let 
	id__ = 0
	
	
	
	const_SegwayANN_SegwayController_stm_ref2_P = const_SpeedPID_P
	const_SegwayANN_SegwayController_stm_ref2_I = const_SpeedPID_I
	const_SegwayANN_SegwayController_stm_ref2_maxIntegral = const_SpeedPID_maxIntegral
	const_SegwayANN_SegwayController_stm_ref0_maxAngle = const_BalanceSTM_maxAngle
	const_SegwayANN_SegwayController_stm_ref0_loopTime = const_BalanceSTM_loopTime
	const_SegwayANN_SegwayController_stm_ref0_startupDelay = const_BalanceSTM_startupDelay
	const_SegwayANN_SegwayController_stm_ref0_speedUpdate = const_BalanceSTM_speedUpdate
	const_SegwayANN_SegwayController_stm_ref0_rotationUpdate = const_BalanceSTM_rotationUpdate
	const_SegwayANN_SegwayController_stm_ref0_motorBudget = const_BalanceSTM_motorBudget
	const_SegwayANN_SegwayController_stm_ref0_angleBudget = const_BalanceSTM_angleBudget
	const_SegwayANN_SegwayController_stm_ref0_speedBudget = const_BalanceSTM_speedBudget
	const_SegwayANN_SegwayController_stm_ref0_rotationBudget = const_BalanceSTM_rotationBudget
	const_SegwayANN_SegwayController_stm_ref3_D = const_RotationPID_D
		
within
	SegwayANN::D__(id__,
			    const_SegwayANN_SegwayController_stm_ref0_maxAngle,
			    const_SegwayANN_SegwayController_stm_ref0_loopTime,
			    const_SegwayANN_SegwayController_stm_ref0_startupDelay,
			    const_SegwayANN_SegwayController_stm_ref0_speedUpdate,
			    const_SegwayANN_SegwayController_stm_ref0_rotationUpdate,
			    const_SegwayANN_SegwayController_stm_ref0_motorBudget,
			    const_SegwayANN_SegwayController_stm_ref0_angleBudget,
			    const_SegwayANN_SegwayController_stm_ref0_speedBudget,
			    const_SegwayANN_SegwayController_stm_ref0_rotationBudget,
			    const_SegwayANN_SegwayController_stm_ref2_P,
			    const_SegwayANN_SegwayController_stm_ref2_I,
			    const_SegwayANN_SegwayController_stm_ref2_maxIntegral,
			    const_SegwayANN_SegwayController_stm_ref3_D)[[tock<-tock,tock<-tock']],<diff(Events,{tock',tock}),{tock}>)\{tock} :[divergence free [FD]]

-- M2 - divergence free
assert let 
	id__ = 0
	
	
	
	const_SegwayANN_SegwayController_stm_ref2_P = const_SpeedPID_P
	const_SegwayANN_SegwayController_stm_ref2_I = const_SpeedPID_I
	const_SegwayANN_SegwayController_stm_ref2_maxIntegral = const_SpeedPID_maxIntegral
	const_SegwayANN_SegwayController_stm_ref0_maxAngle = const_BalanceSTM_maxAngle
	const_SegwayANN_SegwayController_stm_ref0_loopTime = const_BalanceSTM_loopTime
	const_SegwayANN_SegwayController_stm_ref0_startupDelay = const_BalanceSTM_startupDelay
	const_SegwayANN_SegwayController_stm_ref0_speedUpdate = const_BalanceSTM_speedUpdate
	const_SegwayANN_SegwayController_stm_ref0_rotationUpdate = const_BalanceSTM_rotationUpdate
	const_SegwayANN_SegwayController_stm_ref0_motorBudget = const_BalanceSTM_motorBudget
	const_SegwayANN_SegwayController_stm_ref0_angleBudget = const_BalanceSTM_angleBudget
	const_SegwayANN_SegwayController_stm_ref0_speedBudget = const_BalanceSTM_speedBudget
	const_SegwayANN_SegwayController_stm_ref0_rotationBudget = const_BalanceSTM_rotationBudget
	const_SegwayANN_SegwayController_stm_ref3_D = const_RotationPID_D
		
within
	SegwayANN::D__(id__,
			    const_SegwayANN_SegwayController_stm_ref0_maxAngle,
			    const_SegwayANN_SegwayController_stm_ref0_loopTime,
			    const_SegwayANN_SegwayController_stm_ref0_startupDelay,
			    const_SegwayANN_SegwayController_stm_ref0_speedUpdate,
			    const_SegwayANN_SegwayController_stm_ref0_rotationUpdate,
			    const_SegwayANN_SegwayController_stm_ref0_motorBudget,
			    const_SegwayANN_SegwayController_stm_ref0_angleBudget,
			    const_SegwayANN_SegwayController_stm_ref0_speedBudget,
			    const_SegwayANN_SegwayController_stm_ref0_rotationBudget,
			    const_SegwayANN_SegwayController_stm_ref2_P,
			    const_SegwayANN_SegwayController_stm_ref2_I,
			    const_SegwayANN_SegwayController_stm_ref2_maxIntegral,
			    const_SegwayANN_SegwayController_stm_ref3_D) :[divergence free]

-- M3 - divergence free
assert let 
	id__ = 0
	
	
	
	const_SegwayANN_SegwayController_stm_ref2_P = const_SpeedPID_P
	const_SegwayANN_SegwayController_stm_ref2_I = const_SpeedPID_I
	const_SegwayANN_SegwayController_stm_ref2_maxIntegral = const_SpeedPID_maxIntegral
	const_SegwayANN_SegwayController_stm_ref0_maxAngle = const_BalanceSTM_maxAngle
	const_SegwayANN_SegwayController_stm_ref0_loopTime = const_BalanceSTM_loopTime
	const_SegwayANN_SegwayController_stm_ref0_startupDelay = const_BalanceSTM_startupDelay
	const_SegwayANN_SegwayController_stm_ref0_speedUpdate = const_BalanceSTM_speedUpdate
	const_SegwayANN_SegwayController_stm_ref0_rotationUpdate = const_BalanceSTM_rotationUpdate
	const_SegwayANN_SegwayController_stm_ref0_motorBudget = const_BalanceSTM_motorBudget
	const_SegwayANN_SegwayController_stm_ref0_angleBudget = const_BalanceSTM_angleBudget
	const_SegwayANN_SegwayController_stm_ref0_speedBudget = const_BalanceSTM_speedBudget
	const_SegwayANN_SegwayController_stm_ref0_rotationBudget = const_BalanceSTM_rotationBudget
	const_SegwayANN_SegwayController_stm_ref3_D = const_RotationPID_D
		
within
	SegwayANN::D__(id__,
			    const_SegwayANN_SegwayController_stm_ref0_maxAngle,
			    const_SegwayANN_SegwayController_stm_ref0_loopTime,
			    const_SegwayANN_SegwayController_stm_ref0_startupDelay,
			    const_SegwayANN_SegwayController_stm_ref0_speedUpdate,
			    const_SegwayANN_SegwayController_stm_ref0_rotationUpdate,
			    const_SegwayANN_SegwayController_stm_ref0_motorBudget,
			    const_SegwayANN_SegwayController_stm_ref0_angleBudget,
			    const_SegwayANN_SegwayController_stm_ref0_speedBudget,
			    const_SegwayANN_SegwayController_stm_ref0_rotationBudget,
			    const_SegwayANN_SegwayController_stm_ref2_P,
			    const_SegwayANN_SegwayController_stm_ref2_I,
			    const_SegwayANN_SegwayController_stm_ref2_maxIntegral,
			    const_SegwayANN_SegwayController_stm_ref3_D) :[divergence free]

-- C1 - timed deadlock free
assert prioritise(let 
	id__ = 0
	
	
	
	const_SegwayANN_SegwayController_stm_ref0_maxAngle = const_BalanceSTM_maxAngle
	const_SegwayANN_SegwayController_stm_ref0_loopTime = const_BalanceSTM_loopTime
	const_SegwayANN_SegwayController_stm_ref0_startupDelay = const_BalanceSTM_startupDelay
	const_SegwayANN_SegwayController_stm_ref0_speedUpdate = const_BalanceSTM_speedUpdate
	const_SegwayANN_SegwayController_stm_ref0_rotationUpdate = const_BalanceSTM_rotationUpdate
	const_SegwayANN_SegwayController_stm_ref0_motorBudget = const_BalanceSTM_motorBudget
	const_SegwayANN_SegwayController_stm_ref0_angleBudget = const_BalanceSTM_angleBudget
	const_SegwayANN_SegwayController_stm_ref0_speedBudget = const_BalanceSTM_speedBudget
	const_SegwayANN_SegwayController_stm_ref0_rotationBudget = const_BalanceSTM_rotationBudget
	const_SegwayANN_SegwayController_stm_ref2_P = const_SpeedPID_P
	const_SegwayANN_SegwayController_stm_ref2_I = const_SpeedPID_I
	const_SegwayANN_SegwayController_stm_ref2_maxIntegral = const_SpeedPID_maxIntegral
	const_SegwayANN_SegwayController_stm_ref3_D = const_RotationPID_D
		
within
	SegwayANN::SegwayController::D__(id__,
			    const_SegwayANN_SegwayController_stm_ref0_maxAngle,
			    const_SegwayANN_SegwayController_stm_ref0_loopTime,
			    const_SegwayANN_SegwayController_stm_ref0_startupDelay,
			    const_SegwayANN_SegwayController_stm_ref0_speedUpdate,
			    const_SegwayANN_SegwayController_stm_ref0_rotationUpdate,
			    const_SegwayANN_SegwayController_stm_ref0_motorBudget,
			    const_SegwayANN_SegwayController_stm_ref0_angleBudget,
			    const_SegwayANN_SegwayController_stm_ref0_speedBudget,
			    const_SegwayANN_SegwayController_stm_ref0_rotationBudget,
			    const_SegwayANN_SegwayController_stm_ref2_P,
			    const_SegwayANN_SegwayController_stm_ref2_I,
			    const_SegwayANN_SegwayController_stm_ref2_maxIntegral,
			    const_SegwayANN_SegwayController_stm_ref3_D)[[tock<-tock,tock<-tock']],<diff(Events,{tock',tock}),{tock}>)\{tock} :[divergence free [FD]]

-- C2 - divergence free
assert let 
	id__ = 0
	
	
	
	const_SegwayANN_SegwayController_stm_ref0_maxAngle = const_BalanceSTM_maxAngle
	const_SegwayANN_SegwayController_stm_ref0_loopTime = const_BalanceSTM_loopTime
	const_SegwayANN_SegwayController_stm_ref0_startupDelay = const_BalanceSTM_startupDelay
	const_SegwayANN_SegwayController_stm_ref0_speedUpdate = const_BalanceSTM_speedUpdate
	const_SegwayANN_SegwayController_stm_ref0_rotationUpdate = const_BalanceSTM_rotationUpdate
	const_SegwayANN_SegwayController_stm_ref0_motorBudget = const_BalanceSTM_motorBudget
	const_SegwayANN_SegwayController_stm_ref0_angleBudget = const_BalanceSTM_angleBudget
	const_SegwayANN_SegwayController_stm_ref0_speedBudget = const_BalanceSTM_speedBudget
	const_SegwayANN_SegwayController_stm_ref0_rotationBudget = const_BalanceSTM_rotationBudget
	const_SegwayANN_SegwayController_stm_ref2_P = const_SpeedPID_P
	const_SegwayANN_SegwayController_stm_ref2_I = const_SpeedPID_I
	const_SegwayANN_SegwayController_stm_ref2_maxIntegral = const_SpeedPID_maxIntegral
	const_SegwayANN_SegwayController_stm_ref3_D = const_RotationPID_D
		
within
	SegwayANN::SegwayController::D__(id__,
			    const_SegwayANN_SegwayController_stm_ref0_maxAngle,
			    const_SegwayANN_SegwayController_stm_ref0_loopTime,
			    const_SegwayANN_SegwayController_stm_ref0_startupDelay,
			    const_SegwayANN_SegwayController_stm_ref0_speedUpdate,
			    const_SegwayANN_SegwayController_stm_ref0_rotationUpdate,
			    const_SegwayANN_SegwayController_stm_ref0_motorBudget,
			    const_SegwayANN_SegwayController_stm_ref0_angleBudget,
			    const_SegwayANN_SegwayController_stm_ref0_speedBudget,
			    const_SegwayANN_SegwayController_stm_ref0_rotationBudget,
			    const_SegwayANN_SegwayController_stm_ref2_P,
			    const_SegwayANN_SegwayController_stm_ref2_I,
			    const_SegwayANN_SegwayController_stm_ref2_maxIntegral,
			    const_SegwayANN_SegwayController_stm_ref3_D) :[divergence free]

-- C3 - divergence free
assert let 
	id__ = 0
	
	
	
	const_SegwayANN_SegwayController_stm_ref0_maxAngle = const_BalanceSTM_maxAngle
	const_SegwayANN_SegwayController_stm_ref0_loopTime = const_BalanceSTM_loopTime
	const_SegwayANN_SegwayController_stm_ref0_startupDelay = const_BalanceSTM_startupDelay
	const_SegwayANN_SegwayController_stm_ref0_speedUpdate = const_BalanceSTM_speedUpdate
	const_SegwayANN_SegwayController_stm_ref0_rotationUpdate = const_BalanceSTM_rotationUpdate
	const_SegwayANN_SegwayController_stm_ref0_motorBudget = const_BalanceSTM_motorBudget
	const_SegwayANN_SegwayController_stm_ref0_angleBudget = const_BalanceSTM_angleBudget
	const_SegwayANN_SegwayController_stm_ref0_speedBudget = const_BalanceSTM_speedBudget
	const_SegwayANN_SegwayController_stm_ref0_rotationBudget = const_BalanceSTM_rotationBudget
	const_SegwayANN_SegwayController_stm_ref2_P = const_SpeedPID_P
	const_SegwayANN_SegwayController_stm_ref2_I = const_SpeedPID_I
	const_SegwayANN_SegwayController_stm_ref2_maxIntegral = const_SpeedPID_maxIntegral
	const_SegwayANN_SegwayController_stm_ref3_D = const_RotationPID_D
		
within
	SegwayANN::SegwayController::D__(id__,
			    const_SegwayANN_SegwayController_stm_ref0_maxAngle,
			    const_SegwayANN_SegwayController_stm_ref0_loopTime,
			    const_SegwayANN_SegwayController_stm_ref0_startupDelay,
			    const_SegwayANN_SegwayController_stm_ref0_speedUpdate,
			    const_SegwayANN_SegwayController_stm_ref0_rotationUpdate,
			    const_SegwayANN_SegwayController_stm_ref0_motorBudget,
			    const_SegwayANN_SegwayController_stm_ref0_angleBudget,
			    const_SegwayANN_SegwayController_stm_ref0_speedBudget,
			    const_SegwayANN_SegwayController_stm_ref0_rotationBudget,
			    const_SegwayANN_SegwayController_stm_ref2_P,
			    const_SegwayANN_SegwayController_stm_ref2_I,
			    const_SegwayANN_SegwayController_stm_ref2_maxIntegral,
			    const_SegwayANN_SegwayController_stm_ref3_D) :[divergence free]

-- A1 - timed deadlock free
assert prioritise(let 
	id__ = 0
within
	SegwayANN::AnglePIDANN::D__(id__)[[tock<-tock,tock<-tock']],<diff(Events,{tock',tock}),{tock}>)\{tock} :[divergence free [FD]]

-- A2 - divergence free
assert let 
	id__ = 0
within
	SegwayANN::AnglePIDANN::D__(id__) :[divergence free]

-- A3 - deterministic
assert let 
	id__ = 0
within
	SegwayANN::AnglePIDANN::D__(id__) :[deterministic]

