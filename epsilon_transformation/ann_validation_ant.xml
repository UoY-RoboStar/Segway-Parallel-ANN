<?xml version="1.0"?>
<project default="main">
	
	<target name="main">
			
		  <epsilon.eol>
			         var index = 0;
            <exports ref="index" ant="true"/>
        </epsilon.eol>
			        	
	 
	        <!-- For every RoboChart .rct file in gen_files, from ANNFileGeneration. -->
	        <epsilon.for>
	            <fileset dir="gen_files" includes="*rct"/>
	        	
	            <epsilon.eol>
	              var circusModelFile= "output" + index + ".model";

		          <uses ref="index" />
	            <exports ref="circusModelFile" ant="true"/>
	            </epsilon.eol>
	        	
	        	<epsilon.eol>
		              var isabelleText = "isabelle_output_" + index + ".thy";

		          <uses ref="index" />
	            <exports ref="isabelleText" ant="true"/>
	            </epsilon.eol>
	        	
	        
	        	
	            <!-- Load the input RoboChart model -->
	     	        <epsilon.emf.loadModel name="RC" aliases = "RC"
	     	    		modelFile="gen_files/${it}"
	     	    		metamodelUri="http://www.robocalc.circus/RoboChart"
	     	    		expand="true" 
	     	    		read="true" store="false" profile="true"/>

			  <!-- Load the output Circus Model -->
	      	  <epsilon.emf.loadModel name="Z" aliases = "Z"
	        	  		modelFile="out_dir/${circusModelFile}"
	        	  		metamodelUri="http://www.robocalc.circus/Circus"
	        	  		expand="true"
	        	  		read="false" store="true" profile="true"/>
	        	
	        	<!-- Generate the Circus model using EOL -->
	            <epsilon.eol src="ann_generation.eol">
	                <model ref="RC"/>
	                <model ref="Z"/>   
	            </epsilon.eol>
	        	
	        	<!-- Commented out for now, only for channels, I performed this for a previous, not full version, 
	        	and the channels loaded in Isabelle. perform the Circus M2T, store it in  -->
	        	<!--<epsilon.egl src="CircusM2T_Param.egx">
	        		<parameter name="TARGET" value="isabelle_out/${isabelleText}"/>
    				<model ref="Z"/>
    			</epsilon.egl> -->
	        	
	        	<epsilon.eol>
	              index = (index.asInteger() + 1).asString();
	        		<uses ref="index" />
	        		<exports ref="index" />
	        	   </epsilon.eol> 

	            <!-- Dispose of the models -->
	            <epsilon.disposeModels />
	        </epsilon.for>
	    </target>

	<epsilon.disposeModels/>

  
</project>
